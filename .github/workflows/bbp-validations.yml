name: Domains validation

on:
  pull_request:
    branches:
      - main
    paths:
      - '**.json'
  workflow_dispatch:

jobs:
  check-for-duplicates:
    runs-on: ubuntu-latest-16-cores
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Find duplicate domains
        run: >
          set -e

          jq -r '.programs[].domains[]' chaos-bugbounty-list.json | sort | uniq
          -c | awk '$1 > 1 { print $2 }' > duplicates.txt

          if [[ -s duplicates.txt ]]; then
              echo "Duplicate domains found: $(cat duplicates.txt)"
              exit 1
          else
              echo "No duplicate domains found."
          fi
          
  check-invalid-domains:
    runs-on: ubuntu-latest-16-cores
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Installing Validate domains binary
        run: >
          go install
          github.com/projectdiscovery/public-bugbounty-programs/cmd/validate-domains
        shell: bash

      - name: Check domains validation
        run: |
          validate-domains -file chaos-bugbounty-list.json
        shell: bash

      - name: Checking domains validity
        run: |
          if [[ -s invalid_domains.txt ]]; then
              echo "Invalid domains found: $(cat invalid_domains.txt)"
              exit 1
          fi

  httpx-check:
    runs-on: ubuntu-latest-16-cores
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Setup golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true
          
      # This command compares the changes made in a pull request with the main branch, 
      # and filters out the JSON files containing URLs of bug bounty programs. It then 
      # extracts the URLs from the changed JSON files, compares them with the URLs in the main branch, 
      # and saves the unique URLs in a text file named "urls.txt".

      - name: Get all urls
        run: git diff --name-only origin/main ${{ github.event.pull_request.head.ref }} | grep '.json$' | xargs cat | jq -r '.programs[].url' | grep -vf <(git --no-pager show origin/main:chaos-bugbounty-list.json | jq -r '.programs[].url') > urls.txt

      - name: Installing Validate domains binary
        run: >
          go install
          github.com/projectdiscovery/public-bugbounty-programs/cmd/httpx-tester
        shell: bash

      - name: Checking URL availability
        run: |
          httpx-tester -file urls.txt
        shell: bash

      - name: Checking programs with unaccessible policy URL
        run: |
          if [[ -s invalid.txt ]]; then
              echo "programs with not accessible URL policy found: $(cat invalid.txt)"
              exit 1
          fi